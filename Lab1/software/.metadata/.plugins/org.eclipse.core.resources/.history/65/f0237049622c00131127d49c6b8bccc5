/*
 * lab1_phase2.c
 *
 *  Created on: 2013-10-03
 *      Author: h53huang
 */
/*
 * original code: init(6,8)
 * void init(int, int);
  missed = 99 pulse(s)
  max latency = 1095 / 1024th(s) of a period
  max latency = 919 microsecond(s)
  task units processed = 20000 units
 * ; init(3,10);
 * init(10,3); (init(8,6); init(2,2); init(13,13)
 * results
 */
/*
void init(int, int);
void background(int);
void finalize(void);
#include "system.h"
#include <io.h>
// our test
int main(void)
{
	int i;
	int flag;
	flag = 0;
	//period and duty cycles should not exceed 14
	//originally init(6, 8)
	init(3, 10);
	for(i=0; i<100; i++)
	{
		int j;
		while(flag == 0) {
			for(j = 100; j > 0; j--)
			{
				background(j);
				if(IORD(PIO_PULSE_BASE, 0) == 0){
					flag = 1;
					IOWR(PIO_RESPONSE_BASE, 0, 1);
					break;
				}
			}
			//if(flag == 0){
			//	while(IORD(PIO_PULSE_BASE, 0) == 0) {}
			//}
			flag = 1;
		}
		//IOWR(PIO_RESPONSE_BASE, 0, 1);
		//background(200);
		flag = 0;
		while(flag == 0) {
			for(j = 100; j > 0; j--)
			{
				background(j);
				if(IORD(PIO_PULSE_BASE, 1) == 0){
					flag = 1;
					IOWR(PIO_RESPONSE_BASE, 0, 0);
					break;
				}
			}
			//if(flag ==0){
			//	while(IORD(PIO_PULSE_BASE, 0) == 1) {}
			//}
			flag = 1;
		}
		//while(IORD(PIO_PULSE_BASE, 0) == 1) {}
		//IOWR(PIO_RESPONSE_BASE, 0, 0);
	}
	finalize();
}
*/
void init(int, int);
void background(int);
void finalize(void);
#include "system.h"
#include <io.h>
// our test
int main(void)
{
	int i;
	init(3, 10);
	for(i=0; i<100; i++)
	{
		while(IORD(PIO_PULSE_BASE, 0) == 0) {}
		IOWR(PIO_RESPONSE_BASE, 0, 1);
		background(200);
		while(IORD(PIO_PULSE_BASE, 0) == 1) {}
		IOWR(PIO_RESPONSE_BASE, 0, 0);
	}
	finalize();
}

